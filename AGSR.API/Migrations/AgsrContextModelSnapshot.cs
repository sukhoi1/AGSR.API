// <auto-generated />
using System;
using AGSR.TestTask.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AGSR.TestTask.Migrations
{
    [DbContext(typeof(AgsrContext))]
    partial class AgsrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AGSR.TestTask.Models.PatientModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("family");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string[]>("Given")
                        .HasColumnType("text[]")
                        .HasColumnName("given");

                    b.Property<string>("Use")
                        .HasColumnType("text")
                        .HasColumnName("use");

                    b.HasKey("Id");

                    b.HasIndex("BirthDate");

                    b.HasIndex("Family");

                    b.ToTable("patient", (string)null);

                    b.HasCheckConstraint("CK_Patient_Gender", "Gender IN ('male','female','other','unknown')");
                });
#pragma warning restore 612, 618
        }
    }
}
